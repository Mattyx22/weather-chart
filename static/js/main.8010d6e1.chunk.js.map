{"version":3,"sources":["components/Menu.js","components/ChartTag.js","components/WeatherData.js","index.js"],"names":["Menu","state","search","localization","onFormSubmit","e","preventDefault","console","log","_this","axios","get","concat","then","result","setState","data","results","geometry","lat","lng","catch","error","_this2","this","react_default","a","createElement","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","onSubmit","placeholder","onChange","target","value","React","Component","ChartTag","d","Date","getDate","temperatures","props","tempList","ctx","document","getElementById","Chart","labels","days","datasets","label","backgroundColor","borderColor","borderWidth","options","scales","yAxes","ticks","beginAtZero","style","width","position","message","long","height","WeatherData","weatherData","daily","address","components","city","map","temperature","push","Math","round","temperatureHigh","components_ChartTag","JSON","stringify","App","errorMsg","window","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","err","components_WeatherData","components_Menu","renderContent","ReactDOM","render","src_App","querySelector"],"mappings":"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","file":"static/js/main.8010d6e1.chunk.js","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nclass Menu extends React.Component {\r\n    state = {search: '', localization: [] };\r\n\r\n    onFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(this.state.search);\r\n    \r\n        \r\n        axios.get(`https://api.opencagedata.com/geocode/v1/json?q=${this.state.search}&key=31f2985b4a544bbc9e42b559da344419`)\r\n        .then(result => this.setState({\r\n            localization: [result.data.results[0].geometry.lat, \r\n            result.data.results[0].geometry.lng]\r\n        }))\r\n        .catch(error => this.setState({\r\n            error: error\r\n        }))\r\n\r\n        \r\n\r\n        \r\n    }\r\n\r\n    render(){\r\n        return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <a className=\"navbar-brand\" href=\"#\">Weather Charts</a>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n                <div className=\"navbar-nav\">\r\n                <a className=\"nav-item nav-link active\" href=\"#\">Home <span className=\"sr-only\">(current)</span></a>\r\n                <a className=\"nav-item nav-link\" href=\"#\">Features</a>\r\n                <a className=\"nav-item nav-link\" href=\"#\">Pricing</a>\r\n                <form className=\"form-inline my-2 my-lg-0\" onSubmit={this.onFormSubmit}>\r\n                    <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"City\" aria-label=\"Search\" \r\n                    onChange={(e) => this.setState({\r\n                        search: e.target.value\r\n                    })} value={this.state.search} />\r\n                    <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\r\n                </form>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n                }\r\n};\r\n\r\nexport default Menu;","import React from 'react';\r\nimport Chart from 'chart.js';\r\n\r\nlet days = []\r\n\r\nclass ChartTag extends React.Component {\r\n    \r\n    days() {\r\n        let d = new Date();\r\n        \r\n        days = [d.getDate(), d.getDate()+1, d.getDate()+2, d.getDate()+3, d.getDate()+4, d.getDate()+5]\r\n\r\n        return days;\r\n    }\r\n    \r\n    componentDidUpdate(){   \r\n        \r\n        let temperatures = this.props.tempList;\r\n\r\n        var ctx = document.getElementById(\"myChart\");\r\n        new Chart(ctx, {\r\n        type: 'line',\r\n        data: {\r\n            labels: this.days(),\r\n            datasets: [{\r\n                label: 'Celsius degrees',\r\n                data: temperatures,\r\n                backgroundColor: [\r\n                    'rgba(255, 99, 132, 0.2)',\r\n                    'rgba(54, 162, 235, 0.2)',\r\n                    'rgba(255, 206, 86, 0.2)',\r\n                    'rgba(75, 192, 192, 0.2)',\r\n                    'rgba(153, 102, 255, 0.2)',\r\n                    'rgba(255, 159, 64, 0.2)'\r\n                ],\r\n                borderColor: [\r\n                    'rgba(255,99,132,1)',\r\n                    'rgba(54, 162, 235, 1)',\r\n                    'rgba(255, 206, 86, 1)',\r\n                    'rgba(75, 192, 192, 1)',\r\n                    'rgba(153, 102, 255, 1)',\r\n                    'rgba(255, 159, 64, 1)'\r\n                ],\r\n                borderWidth: 1\r\n            }]\r\n        },\r\n        options: {\r\n            scales: {\r\n                yAxes: [{\r\n                    ticks: {\r\n                        beginAtZero:true\r\n                    }\r\n                }]\r\n            }\r\n        }\r\n    });\r\n\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"center\" style={{width: '36vw', position: 'relative'}}>\r\n                <span>Your position: {this.props.message} {this.props.lat} {this.props.long} </span>\r\n                <h3>Current weather:</h3>\r\n                <canvas id=\"myChart\" width=\"400\" height=\"400\"></canvas>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default ChartTag;","import React from 'react';\r\nimport axios from 'axios';\r\nimport ChartTag from './ChartTag';\r\n\r\n\r\nlet tempList = [];\r\n\r\nclass WeatherData extends React.Component {\r\n    state = { weatherData: { daily: {data: [] } }, error: null, tempList: [], address: { data: { result: [] } } };\r\n    componentDidMount(){\r\n        \r\n        axios.get(`https://cors-anywhere.herokuapp.com/https://api.darksky.net/forecast/f8e57f1fd54716f5fd4f0ce5023df702/${this.props.lat},${this.props.long}?units=si`)\r\n        .then(result => this.setState({\r\n            weatherData: result.data\r\n        }))\r\n        .catch(error => this.setState({\r\n            error: error\r\n        }))\r\n\r\n        this.setState({tempList: this.tempList()})\r\n\r\n        axios.get(`https://cors-anywhere.herokuapp.com/https://api.opencagedata.com/geocode/v1/json?q=${this.props.lat}+${this.props.long}&key=31f2985b4a544bbc9e42b559da344419`)\r\n        .then(result => this.setState({\r\n            address: result.data.results[0].components.city\r\n        }))\r\n        .catch(error => this.setState({\r\n            error: error\r\n        }))\r\n    }\r\n\r\n    tempList(){\r\n        this.state.weatherData.daily.data.map((temperature) => {\r\n            return tempList.push(Math.round(temperature.temperatureHigh));\r\n        })\r\n\r\n        return tempList;\r\n    }\r\n    \r\n    \r\n    render(){\r\n        return(\r\n            <div>\r\n            {/*JSON.stringify(this.state.weatherData)*/}\r\n            <ChartTag lat={this.props.lat} long={this.props.long} tempList={this.state.tempList} />\r\n            <h4>You are here:</h4>\r\n            {JSON.stringify(this.state.address)}\r\n            <br /><br />\r\n            <h4>Temperatures:</h4>\r\n            {this.tempList()}\r\n            {this.state.weatherData.daily.data.map((temperature) => {\r\n            return <div>{temperature.temperatureHigh}</div>\r\n            })}\r\n            </div>\r\n            \r\n        );\r\n    };\r\n};\r\n\r\n\r\n\r\nexport default WeatherData;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport Menu from './components/Menu';\r\nimport ChartTag from './components/ChartTag';\r\nimport WeatherData from './components/WeatherData';\r\n\r\nclass App extends React.Component {\r\n    state = {lat: null, long: '', errorMsg: '' };\r\n\r\n    componentDidMount(){\r\n        window.navigator.geolocation.getCurrentPosition(\r\n            (position) => {\r\n                this.setState({\r\n                    lat: position.coords.latitude,\r\n                    long: position.coords.longitude\r\n                });\r\n            },\r\n            (err) => this.setState({errorMsg: err.message})\r\n        );\r\n    }\r\n\r\n    renderContent() {\r\n        if(this.state.lat && this.state.long && !this.state.errorMsg){\r\n            return(\r\n                <div>\r\n                    <WeatherData lat={this.state.lat} long={this.state.long}/>\r\n                </div>\r\n                \r\n            );\r\n        } else if (!this.state.lat && !this.state.long && this.state.errorMsg) {\r\n            return (\r\n                <ChartTag message={this.state.errorMsg} />\r\n            );\r\n        } else {\r\n            return (\r\n                <ChartTag message=\"Loading...\" />\r\n            );\r\n        }\r\n    };\r\n\r\n    onSearchSubmit(localization){\r\n        console.log(localization);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Menu lat={this.state.lat} long={this.state.long} />\r\n                {this.renderContent()}\r\n                \r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.querySelector('#root')\r\n);"],"sourceRoot":""}